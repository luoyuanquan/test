; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o..\OUTPUT\usart.o --depend=..\OUTPUT\usart.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\ST\STM32F10x --omf_browse=..\OUTPUT\usart.crf ..\SYSTEM\usart\usart.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _sys_exit PROC
;;;37     //定义_sys_exit()以避免使用半主机模式    
;;;38     _sys_exit(int x) 
000000  4601              MOV      r1,r0
;;;39     { 
;;;40     	x = x; 
000002  bf00              NOP      
;;;41     } 
000004  4770              BX       lr
;;;42     //重定义fputc函数 
                          ENDP

                  fputc PROC
;;;43     int fputc(int ch, FILE *f)
000006  bf00              NOP      
                  |L1.8|
;;;44     {      
;;;45     	while((USART1->SR&0X40)==0);//循环发送,直到发送完毕   
000008  4a31              LDR      r2,|L1.208|
00000a  8812              LDRH     r2,[r2,#0]
00000c  f0120f40          TST      r2,#0x40
000010  d0fa              BEQ      |L1.8|
;;;46     	USART1->DR = (u8) ch;      
000012  b2c2              UXTB     r2,r0
000014  4b2f              LDR      r3,|L1.212|
000016  801a              STRH     r2,[r3,#0]
;;;47     	return ch;
;;;48     }
000018  4770              BX       lr
;;;49     #endif 
                          ENDP

                  uart_init PROC
;;;93     //091209
;;;94     void uart_init(u32 pclk2,u32 bound)
00001a  e92d5ff0          PUSH     {r4-r12,lr}
;;;95     {  	 
00001e  4605              MOV      r5,r0
000020  460e              MOV      r6,r1
;;;96     	float temp;
;;;97     	u16 mantissa;
;;;98     	u16 fraction;	   
;;;99     	temp=(float)(pclk2*1000000)/(bound*16);//得到USARTDIV
000022  0130              LSLS     r0,r6,#4
000024  f7fffffe          BL       __aeabi_ui2f
000028  4681              MOV      r9,r0
00002a  492b              LDR      r1,|L1.216|
00002c  fb05f001          MUL      r0,r5,r1
000030  f7fffffe          BL       __aeabi_ui2f
000034  4682              MOV      r10,r0
000036  4649              MOV      r1,r9
000038  f7fffffe          BL       __aeabi_fdiv
00003c  4607              MOV      r7,r0
;;;100    	mantissa=temp;				 //得到整数部分
00003e  4638              MOV      r0,r7
000040  f7fffffe          BL       __aeabi_f2uiz
000044  b284              UXTH     r4,r0
;;;101    	fraction=(temp-mantissa)*16; //得到小数部分	 
000046  4620              MOV      r0,r4
000048  f7fffffe          BL       __aeabi_ui2f
00004c  4683              MOV      r11,r0
00004e  4639              MOV      r1,r7
000050  f7fffffe          BL       __aeabi_frsub
000054  4682              MOV      r10,r0
000056  f04f4183          MOV      r1,#0x41800000
00005a  f7fffffe          BL       __aeabi_fmul
00005e  4681              MOV      r9,r0
000060  f7fffffe          BL       __aeabi_f2uiz
000064  4680              MOV      r8,r0
;;;102        mantissa<<=4;
000066  0124              LSLS     r4,r4,#4
;;;103    	mantissa+=fraction; 
000068  eb040008          ADD      r0,r4,r8
00006c  b284              UXTH     r4,r0
;;;104    	RCC->APB2ENR|=1<<2;   //使能PORTA口时钟  
00006e  481b              LDR      r0,|L1.220|
000070  6980              LDR      r0,[r0,#0x18]
000072  f0400004          ORR      r0,r0,#4
000076  4919              LDR      r1,|L1.220|
000078  6188              STR      r0,[r1,#0x18]
;;;105    	RCC->APB2ENR|=1<<14;  //使能串口时钟 
00007a  4608              MOV      r0,r1
00007c  6980              LDR      r0,[r0,#0x18]
00007e  f4404080          ORR      r0,r0,#0x4000
000082  6188              STR      r0,[r1,#0x18]
;;;106    	GPIOA->CRH&=0XFFFFF00F; 
000084  4816              LDR      r0,|L1.224|
000086  6800              LDR      r0,[r0,#0]
000088  f420607f          BIC      r0,r0,#0xff0
00008c  4915              LDR      r1,|L1.228|
00008e  f8c10804          STR      r0,[r1,#0x804]
;;;107    	GPIOA->CRH|=0X000008B0;//IO状态设置
000092  4608              MOV      r0,r1
000094  f8d00804          LDR      r0,[r0,#0x804]
000098  f440600b          ORR      r0,r0,#0x8b0
00009c  f8c10804          STR      r0,[r1,#0x804]
;;;108    		  
;;;109    	RCC->APB2RSTR|=1<<14;   //复位串口1
0000a0  480e              LDR      r0,|L1.220|
0000a2  68c0              LDR      r0,[r0,#0xc]
0000a4  f4404080          ORR      r0,r0,#0x4000
0000a8  490c              LDR      r1,|L1.220|
0000aa  60c8              STR      r0,[r1,#0xc]
;;;110    	RCC->APB2RSTR&=~(1<<14);//停止复位	   	   
0000ac  4608              MOV      r0,r1
0000ae  68c0              LDR      r0,[r0,#0xc]
0000b0  f4204080          BIC      r0,r0,#0x4000
0000b4  60c8              STR      r0,[r1,#0xc]
;;;111    	//波特率设置
;;;112     	USART1->BRR=mantissa; // 波特率设置	 
0000b6  480c              LDR      r0,|L1.232|
0000b8  f8a04808          STRH     r4,[r0,#0x808]
;;;113    	USART1->CR1|=0X200C;  //1位停止,无校验位.
0000bc  480b              LDR      r0,|L1.236|
0000be  8800              LDRH     r0,[r0,#0]
0000c0  f242010c          MOV      r1,#0x200c
0000c4  ea400001          ORR      r0,r0,r1
0000c8  4908              LDR      r1,|L1.236|
0000ca  8008              STRH     r0,[r1,#0]
;;;114    #ifdef EN_USART1_RX		  //如果使能了接收
;;;115    	//使能接收中断
;;;116    	USART1->CR1|=1<<8;    //PE中断使能
;;;117    	USART1->CR1|=1<<5;    //接收缓冲区非空中断使能	    	
;;;118    	MY_NVIC_Init(3,3,USART1_IRQChannel,2);//组2，最低优先级 
;;;119    #endif
;;;120    }
0000cc  e8bd9ff0          POP      {r4-r12,pc}
                          ENDP

                  |L1.208|
                          DCD      0x40013800
                  |L1.212|
                          DCD      0x40013804
                  |L1.216|
                          DCD      0x000f4240
                  |L1.220|
                          DCD      0x40021000
                  |L1.224|
                          DCD      0x40010804
                  |L1.228|
                          DCD      0x40010000
                  |L1.232|
                          DCD      0x40013000
                  |L1.236|
                          DCD      0x4001380c

                          AREA ||.data||, DATA, ALIGN=2

                  __stdout
                          DCD      0x00000000
